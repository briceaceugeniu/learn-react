[{"C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\index.js":"1","C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\reportWebVitals.js":"2","C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\App.js":"3","C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\Person\\Person.js":"4"},{"size":500,"mtime":1612728456422,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1611338332111,"results":"7","hashOfConfig":"6"},{"size":1973,"mtime":1612728456340,"results":"8","hashOfConfig":"6"},{"size":1047,"mtime":1612730583640,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i0yump",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\index.js",[],"C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\reportWebVitals.js",[],["20","21"],"C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\App.js",["22"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      persons: [\n        { id: 1, name: \"Bobby\" },\n        { id: 2, name: \"Martha\" },\n        { id: 3, name: \"Cornel\" },\n      ],\n      showPersons: true,\n    };\n  }\n\n  togglePersonsHandler = () => {\n    this.setState({ showPersons: !this.state.showPersons });\n  };\n\n  delPersonHandler = (index) => {\n    const persons = [...this.state.persons];\n    persons.splice(index, 1);\n    this.setState({ persons: persons });\n  };\n\n  nameChangeHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex((p) => {\n      return p.id === id;\n    });\n\n    const person = { ...this.state.persons[personIndex] };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  render() {\n    const btnStyle = {\n      cursor: \"pointer\",\n      padding: \"8px\",\n      border: \"\",\n      color: \"black\",\n      backgroundColor: \"white\",\n      \":hover\": {\n        backgroundColor: \"red\",\n      },\n    };\n\n    let person = null;\n\n    if (this.state.showPersons) {\n      person = (\n        <div className={`p-content`}>\n          {this.state.persons.map(({ name, id }, index) => {\n            return (\n              <Person\n                click={() => this.delPersonHandler(index)}\n                key={id}\n                name={name}\n                changeName={(event) => this.nameChangeHandler(event, id)}\n              />\n            );\n          })}\n        </div>\n      );\n\n      btnStyle.backgroundColor = \"black\";\n      btnStyle.color = \"white\";\n    }\n\n    return (\n      <div className={`App`}>\n        <button style={btnStyle} onClick={this.togglePersonsHandler}>\n          Switch!\n        </button>\n        {person}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\eugen\\PhpstormProjects\\learn-react\\learn-react-u\\u2-demo1\\src\\Person\\Person.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":25},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]